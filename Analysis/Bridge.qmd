---
title: "Bridge B-macro"
params: 
  patient: "P2"
  patientbis: "P3"
  fileP2: "Matrix/CLL_annotated_Seurat_LogNorm_P2.rds"
  fileP3: "Matrix/CLL_annotated_Seurat_LogNorm_P3.rds"
format: html
editor: visual
---

## Data and libraries initialization

```{r}
#| message: false
library(SeuratObject)
library(sp)
library(Seurat)
library(hdf5r)
library(dplyr)
library(patchwork)
library(ggplot2)
library(stringr)
library(pheatmap)
library(viridis)
library(gridExtra)
library(ggVennDiagram)
library(SingleR)
library(celldex)
library(starTracer)
library(ComplexHeatmap)
library(VISION)
source("functions.R")
```

Read the data pre-processed and keep B cells and macrophages

```{r}
data_p2<-readRDS(params$fileP2)
data_p2<-subset(data_p2, subset = (final_annot %in% c("B","B intermediate","B memory","B naive","Macrophage")))

data_p3<-readRDS(params$fileP3)
data_p3<-subset(data_p3, subset = (final_annot %in% c("B","B intermediate","B memory","B naive","Macrophage")))
```

# Explore the bridge

Cells bridge

Patient 2

```{r}
plotumap<-DimPlot(data_p2, group.by = "final_annot", reduction = "umap", pt.size=0.1, label.size = 2.5) + ggtitle(str_wrap("UMAP", width = 60)) + theme(plot.title = element_text(size = 15, hjust = 0.5))
plotumap
ggsave(paste0("macro_B_umap_", params$patient, ".jpeg"), plotumap, width = 3000, height = 2000, units = "px")
```

```{r}
umap_coords <- Embeddings(data_p2, "umap")
umap_df <- as.data.frame(umap_coords)
colnames(umap_df)
umap_df$cell <- rownames(umap_df)
colnames(umap_df)

x_min <- 2.5
x_max <- 6
y_min <- 4.5
y_max <- 7

umap_df$selected <- ifelse(
  umap_df$umap_1 >= x_min & umap_df$umap_1 <= x_max &
  umap_df$umap_2 >= y_min & umap_df$umap_2 <= y_max,
  "bridge",  
  NA      
)

# Add "bridge" or final annotation
umap_df <- umap_df %>%
  mutate(
    bridge_annot = ifelse(is.na(selected), data_p2$final_annot[cell], selected)
  )

data_p2$bridge_annot <- umap_df$bridge_annot[match(colnames(data_p2), umap_df$cell)]

table(data_p2$bridge_annot)

# Plot UMAP
umap_df$bridge_annot <- data_p2$bridge_annot[match(umap_df$cell, colnames(data_p2))]

plotumap<-ggplot(umap_df, aes(x = umap_1, y = umap_2, color = bridge_annot)) +
  geom_point(size = 1) +
  scale_color_manual(values = c("bridge" = "red", "B" = "grey", "Macrophages" = "grey", "B naive" = "grey", "B memory" = "grey", "B intermediate" = "grey")) +
  theme_minimal() +
  ggtitle("Bridge B cells and macrophages")
plotumap
ggsave(paste0("bridge_umap_", params$patient, ".jpeg"), plotumap, width = 3000, height = 2000, units = "px")
```

Markers RNA and ADT ; differential gene expression with Seurat function FinderMarkers

```{r}
Idents(data_p2) <- data_p2$bridge_annot
bridge.markers_p2 <- FindMarkers(data_p2, ident.1 = "bridge", ident.2 = c("Macrophage","B", "B naive","B intermediate","B memory"))
head(bridge.markers_p2)
nrow(bridge.markers_p2)

top_genes <- bridge.markers_p2 %>%
  dplyr::filter(avg_log2FC > 1, p_val_adj < 0.05)

gene_names_p2 <- rownames(top_genes)

write.table(gene_names_p2, file = "bridge_genes_p2", sep = "\t", quote = FALSE, row.names = FALSE,
    col.names = FALSE)
```

```{r}
Idents(data_p2) <- data_p2$bridge_annot
bridge.adt_p2 <- FindMarkers(data_p2, ident.1 = "bridge", ident.2 = c("Macrophage","B", "B naive","B intermediate","B memory"), assay="ADT", slot = "data")
head(bridge.adt_p2)
nrow(bridge.adt_p2)

antibodies_names_p2 <- rownames(bridge.adt_p2)

write.table(antibodies_names_p2, file = "bridge_adt_p2", sep = "\t", quote = FALSE, row.names = FALSE,col.names = FALSE)
```

Differential genes expression with StarTracer (Zhang et al., 2023)

```{r}
Idents(data_p2) <- data_p2$bridge_annot
res <- searchMarker(
  x = data_p2, #the input seurat object
  thresh.1 = 0.5,
  thresh.2 = NULL,
  method = "pos", 
  num = 2000,
  gene.use = NULL,
  meta.data = NULL,
  ident.use = NULL
)
bridge<-res[["exprs.markers"]]
bridge<-as.data.frame(bridge)
bridge <- bridge[, "bridge", drop = FALSE]
bridge<-bridge[order(bridge$bridge, decreasing = TRUE), drop = FALSE,]
genes_bridge<-rownames(head(bridge, 2000))
write.table(genes_bridge, file = "bridge_genes_startracer_p2", sep = "\t", quote = FALSE, row.names = FALSE,col.names = FALSE)
pdf("heatmap.pdf", width = 8, height = 8)
draw(res[["heatmap"]])
dev.off()
```

Fine annotation (M1 and M2)

```{r}
cell_palette <- c(
  "Macrophages M1" = "#1f77b4",
  "Macrophages M2" = "#93f290ff",
  "naive B-cells" = "#582d15ff",
  "Memory B-cells" = "#582d15ff",
  "Monocytes" = "#e41a1c",
  "Macrophages" = "#984ea3",
  "Class-switched memory B-cells" = "#582d15ff")
ref <- fetchReference("blueprint_encode", "2024-02-26")
ref <- ref[, grepl("B-cells|Monocytes|Macrophages|Myelocytes", ref$label.fine, ignore.case = TRUE)]
norm_counts <- LayerData(data_p2, assay = "RNA", layer = 'data')
annotation<-SingleR(test = norm_counts,
                  ref = ref, 
                  labels = ref$label.fine,
                  de.method = 'wilcox')
data_p2 <- AddMetaData(data_p2, annotation$pruned.labels, col.name = 'SingleR_fine')

title=paste("UMAP annotated by SingleR, patient", params$patient)
plotumap<-DimPlot(data_p2, group.by="SingleR_fine", reduction = "umap", label = FALSE, repel = TRUE, label.size = 4, cols = cell_palette) + ggtitle(str_wrap(title, width = 100)) + theme(plot.title = element_text(size = 15, hjust = 0.5), legend.text = element_text(size = 12))
print(plotumap)
ggsave(paste0("bridge_SingleR_", params$patient, ".jpeg"), plotumap, width = 3000,
  height = 2000, units = "px")

table(data_p2$SingleR_fine)
```

Bubble plot on ADT

```{r}
data_p2<-subset(data_p2, subset= bridge_annot=="bridge")
data_p2$timepoint <- factor(
  data_p2$timepoint,
  levels = c("D1", "D4", "D8", "D11", "D14")
)

adt_markers <- c("Folate-receptor", "CD14.1", "CD11b", "CD16", "CD163.1", "CD15","CD3", "CD4.1", "CD8", "CD19.1", "CD20", "CD10", "CD5.1", "CD69.1", "CD279 (PD-1)", "CD56")

# DotPlot Seurat
dotplot<-DotPlot(data_p2, features = adt_markers, group.by = "timepoint", assay="ADT") +
  ggtitle(paste(
    "ADT expression in the bridge B-macrophages across timepoints, patient",
    params$patient
  )) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)
  )

dotplot

ggsave(paste0("DotPlot_", params$patient, ".jpeg"), dotplot, width = 3000,
  height = 1500, units = "px")
```

VISION for found the enriched pathways

```{r}
signatures <- "c7.all.v2025.1.Hs.symbols.gmt"

scaled_counts <- GetAssayData(data_p2, assay = "RNA",slot = "data")
saveRDS(scaled_counts,"scaled_count")

meta <- as.data.frame(data_p2@meta.data[["bridge_annot"]])
rownames(meta) <- rownames(data_p2@meta.data)
colnames(meta)[1] <- "celltypes"
saveRDS(meta,"meta")

vis <- Vision(scaled_counts,
              signatures = signatures,
              meta = meta,
              latentSpace = as.data.frame(data_p2@reductions[["pca"]]@cell.embeddings) )

vis <- addProjection(vis, "umap", coordinates= as.matrix(data_p2@reductions[["umap"]]@cell.embeddings))
vis <- analyze(vis)

# View results
viewResults(vis)
```

## Patient 3

```{r}
plotumap<-DimPlot(data_p3, group.by = "final_annot", reduction = "umap", pt.size=0.1, label.size = 2.5) + ggtitle(str_wrap("UMAP", width = 60)) + theme(plot.title = element_text(size = 15, hjust = 0.5))
plotumap
ggsave(paste0("macro_B_umap_", params$patientbis, ".jpeg"), plotumap, width = 3000, height = 2000, units = "px")
```

```{r}

umap_coords <- Embeddings(data_p3, "umap")
umap_df <- as.data.frame(umap_coords)
colnames(umap_df)
umap_df$cell <- rownames(umap_df)
colnames(umap_df)

x_min <- 3.5
x_max <- 7.5
y_min <- -2.5
y_max <- 0

umap_df$selected <- ifelse(
  umap_df$umap_1 >= x_min & umap_df$umap_1 <= x_max &
  umap_df$umap_2 >= y_min & umap_df$umap_2 <= y_max,
  "bridge",  
  NA      
)

# Add "bridge" or final annotation
umap_df <- umap_df %>%
  mutate(
    bridge_annot = ifelse(is.na(selected), data_p3$final_annot[cell], selected)
  )

data_p3$bridge_annot <- umap_df$bridge_annot[match(colnames(data_p3), umap_df$cell)]

table(data_p3$bridge_annot)

# Plot UMAP
umap_df$bridge_annot <- data_p3$bridge_annot[match(umap_df$cell, colnames(data_p3))]

plotumap<-ggplot(umap_df, aes(x = umap_1, y = umap_2, color = bridge_annot)) +
  geom_point(size = 1) +
  scale_color_manual(values = c("bridge" = "red", "B" = "grey", "Macrophages" = "grey", "B naive" = "grey", "B memory" = "grey", "B intermediate" = "grey")) +
  theme_minimal() +
  ggtitle("Bridge B cells and macrophages")
plotumap
ggsave(paste0("bridge_umap_", params$patientbis, ".jpeg"), plotumap, width = 3000, height = 2000, units = "px")
```

Markers RNA and ADT

```{r}
Idents(data_p3) <- data_p3$bridge_annot
bridge.markers_p3 <- FindMarkers(data_p3, ident.1 = "bridge", ident.2 = c("Macrophage","B", "B naive","B intermediate","B memory"))
head(bridge.markers_p3)
nrow(bridge.markers_p3)

top_genes <- bridge.markers_p3 %>%
  dplyr::filter(avg_log2FC > 1, p_val_adj < 0.05)

gene_names_p3 <- rownames(top_genes)

write.table(gene_names_p3, file = "bridge_genes_p3", sep = "\t", quote = FALSE, row.names = FALSE,
    col.names = FALSE)
```

```{r}
Idents(data_p3) <- data_p3$bridge_annot
bridge.adt_p3 <- FindMarkers(data_p3, ident.1 = "bridge", ident.2 = c("Macrophage","B", "B naive","B intermediate","B memory"), assay="ADT", slot = "data")
head(bridge.adt_p3)
nrow(bridge.adt_p3)

antibodies_names_p3 <- rownames(bridge.adt_p3)

write.table(antibodies_names_p3, file = "bridge_adt_p3", sep = "\t", quote = FALSE, row.names = FALSE,
    col.names = FALSE)
```

Differential genes expression with StarTracer (Zhang et al., 2023)

```{r}
Idents(data_p3) <- data_p3$bridge_annot
res <- searchMarker(
  x = data_p3, #the input seurat object
  thresh.1 = 0.5,
  thresh.2 = NULL,
  method = "pos", 
  num = 1000,
  gene.use = NULL,
  meta.data = NULL,
  ident.use = NULL
)
bridge<-res[["exprs.markers"]]
bridge<-as.data.frame(bridge)
bridge <- bridge[, "bridge", drop = FALSE]
bridge<-bridge[order(bridge$bridge, decreasing = TRUE), drop = FALSE,]
genes_bridge<-rownames(head(bridge, 1000))
write.table(genes_bridge, file = "bridge_genes_startracer_p3", sep = "\t", quote = FALSE, row.names = FALSE,col.names = FALSE)
pdf("heatmap_p3.pdf", width = 8, height = 8)
draw(res[["heatmap"]])
dev.off()
```

Fine annotation (M1 and M2)

```{r}
norm_counts <- LayerData(data_p3, assay = "RNA", layer = 'data')
annotation<-SingleR(test = norm_counts,
                  ref = ref, 
                  labels = ref$label.fine,
                  de.method = 'wilcox')
data_p3 <- AddMetaData(data_p3, annotation$pruned.labels, col.name = 'SingleR_fine')

title=paste("UMAP annotated by SingleR, patient", params$patient)
plotumap<-DimPlot(data_p3, group.by="SingleR_fine", reduction = "umap", label = FALSE, repel = TRUE, label.size = 4) + ggtitle(str_wrap(title, width = 100)) + theme(plot.title = element_text(size = 15, hjust = 0.5), legend.text = element_text(size = 12))
print(plotumap)
ggsave(paste0("bridge_SingleR_", params$patientbis, ".jpeg"), plotumap, width = 3000,
  height = 2000, units = "px")

table(data_p3$SingleR_fine)
```

Bubble plot on ADT

```{r}
data_p3<-subset(data_p3, subset= bridge_annot=="bridge")
data_p3$timepoint <- factor(
  data_p3$timepoint,
  levels = c("D1", "D4", "D8", "D11", "D14")
)

adt_markers <- c("CD11b", "CD14.1", "CD15", "CD16", "CD163.1", "Folate-receptor", "CD177.1", "CD47.1", "CD31","CD19.1", "CD20", "CD10", "CD5.1", "CD3", "CD4.1", "CD8", "CD69.1", "CD56")

# DotPlot Seurat
dotplot<-DotPlot(data_p3, features = adt_markers, group.by = "timepoint", assay="ADT") +
  ggtitle(paste(
    "ADT expression in the bridge B-macrophages across timepoints, patient",
    params$patientbis
  )) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)
  )
dotplot

ggsave(paste0("DotPlot_", params$patientbis, ".jpeg"), dotplot, width = 3000,
  height = 1500, units = "px")
```

## Venn diagram

The bridge signatures between patient 2 and 3

```{r}
venn_plot<-ggVennDiagram(
  x = list(
    A = gene_names_p2,
    B = gene_names_p3),
  category.names = c("P2", "P3"),
  filename = NULL
) + ggtitle(str_wrap("Venn Diagram based on genes expressed in bridge in patient 2 and patient 3", width = 60)) + theme(plot.title = element_text(size = 15, hjust = 0.5))

ggsave("venn_rna.jpeg", venn_plot, width = 3000, height = 2000, units = "px")
```

```{r}
venn_plot<-ggVennDiagram(
  x = list(
    A = antibodies_names_p2,
    B = antibodies_names_p3),
  category.names = c("P2", "P3"),
  filename = NULL
) + ggtitle(str_wrap("Venn Diagram based on ADT in bridge in patient 2 and patient 3", width = 60)) + theme(plot.title = element_text(size = 15, hjust = 0.5))

ggsave("venn_adt.jpeg", venn_plot, width = 3000, height = 2000, units = "px")
```
