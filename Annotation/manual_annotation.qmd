---
title: "Manual annotation"
params: 
  patient: "P1"
  file: "CLL_P1_seurat_reduit.rds"
  type: "DDQC"
format: html
editor: visual
---

# Cell types annotation

This script aims to annotate cell clusters in order to identify the corresponding cell types. It combines both automatic and manual annotation approaches to improve accuracy and biological relevance.

## Data and libraries initialization

```{r}
#| message: false
library(SeuratObject)
library(sp)
library(Seurat)
library(hdf5r)
library(dplyr)
library(patchwork)
library(ggplot2)
source("functions.R")
```

Read the data pre-processed

```{r}
data<-readRDS(params$file)
```

## Manual annotation on RNA

With WebCSEA and Seurat

Choisir les marqeurs par la literatures ou donnÃ© par le site de Azimuth

```{r}
#cluster0.markers <- FindMarkers(data, ident.1 = 0, ident.2 = c(1, 2, 3, 4, 5,6,7))
```

Adaptation to the normalization type

```{r}
if ("SCT" %in% Assays(data)) {
  assay_to_use <- "SCT"
} else {
  assay_to_use <- "RNA"
}
```

```{r}
markers <- FindAllMarkers(data, assay=assay_to_use, only.pos = TRUE)
markers %>%
  group_by(cluster) %>%
  dplyr::filter(avg_log2FC > 1)
```

Create a gene list for each cluster

```{r}
gene_lists <- split(markers$gene, markers$cluster)

#for (cl in names(gene_lists)) {
 # filename <- paste0("cluster", cl, "_genes.tsv")
#  write.table(gene_lists[[cl]], file = filename, sep = "\t", quote = FALSE, row.names = FALSE,
#    col.names = FALSE
#  )
#}

# pour tester pour l'instant sur 1
test<-head(gene_lists[["0"]],n=2000)
write.table(test, file = "test_gene.tsv", sep = "\t", quote = FALSE, row.names = FALSE,
    col.names = FALSE)
```

```{r}
VlnPlot(data, features = c("MS4A1", "CD79A"))
```

```{r}
# Macrophages markers
if ("SCT" %in% Assays(data)) {
  DefaultAssay(data) <- "SCT"
} 
fig<-FeaturePlot(data, features = c("SELENOP","FABP3","CD5L","CCL18","C1QC","C1QB","FABP4","C1QA","APOE"))
fig2<- FeaturePlot(data, features = c("STX11","CD74","ADAM9","CD24","NFKBIA","PGK1","SERPINA1"))
ggsave(paste0("macro_", params$patient, ".jpeg"), fig2, width = 6000, height = 5000, units = "px")
```

Extraction of differentially expressed markers, followed by input of these markers into the WebCSEA tool (Dai Y, Hu R, Liu A, Cho KS, Manuel AM, Li X, Dong X, Jia P, Zhao Z, 2022).

```{r}
cluster 5= macrophages
#new.cluster.ids <- c("Naive CD4 T", "CD14+ Mono", "Memory CD4 T", "B", "CD8 T", "FCGR3A+ Mono",
 #   "NK", "DC", "Platelet","Neutrophils")
#names(new.cluster.ids) <- levels(data)
#data <- RenameIdents(data, new.cluster.ids)
#DimPlot(data, reduction = "umap", label = TRUE, pt.size = 0.5) + NoLegend()
```

```{r}
#plot <- DimPlot(data, reduction = "umap", label = TRUE, label.size = 4.5) + xlab("UMAP 1") + ylab("UMAP 2") +
 #   theme(axis.title = element_text(size = 18), legend.text = element_text(size = 18)) + guides(colour = #guide_legend(override.aes = list(size = 10)))
#ggsave(filename = "./Plots/umap_annotated.jpg", height = 7, width = 12, plot = plot, quality = 50)
```

## Visualization

Bonsai

In this analysis, we use the single-cell Bonsai pipeline available at <https://bonsai.unibas.ch/bonsai/>. The TSV matrix is exported in the pre-processing script, and we supplemented it with an annotation TSV file containing cell barcodes and their corresponding cell type annotations.

In Bonsai tool we can add a file with the cell annotation. The file required is a tsv file with in column the cell barcodes and the cell type.

## Save the annotation file

```{r}
namepath=paste0("CLL_annotated_", params$type, "_", params$patient, ".rds")
#saveRDS(data_annotated, file = namepath)
```
