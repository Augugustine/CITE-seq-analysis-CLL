---
title: "GRN"
params: 
  patient: "P1"
  file: "Matrix/CLL_annotated_Seurat_LogNorm_P1.rds"
format: html
editor: visual
---

## Data and libraries initialization

```{r}
#| message: false
library(SeuratObject)
library(SeuratDisk)
library(sp)
library(Seurat)
library(hdf5r)
library(dplyr)
library(patchwork)
library(ggplot2)
library(stringr)
library(pheatmap)
library(viridis)
library(gridExtra)
library(SCopeLoomR)
library(AUCell)
source("functions.R")
```

Read the data pre-processed

```{r}
data<-readRDS(params$file)
Idents(data) <- data$final_annot
#data<-subset(data, subset = (final_annot %in% c("B","B intermediate","B memory","B naive","Macrophage")))
```

```{r}
SaveLoom(data, filename="TimeCourse.loom")
```

Apply pySCENIC in the Genotoul cluster with the script "pySCENIC.sh"

```{r}
auc_mtx <- read.csv("Matrix/step_3_aucell.csv", row.names = 1, check.names=FALSE)
auc_mtx <- t(auc_mtx)
auc_mtx <- as.data.frame(auc_mtx)
rownames(auc_mtx) <- gsub("[(+)]", "", rownames(auc_mtx))
auc_mtx[] <- lapply(auc_mtx, as.numeric)
auc_mtx <- as.matrix(auc_mtx)

regulons <- read.csv("Matrix/step_2_reg.csv")
```

```{r}
barplot(as.numeric(auc_mtx), main="Distribution des scores AUC SCENIC")
```

```{r}
groups <- data@meta.data[["final_annot"]]
identical(colnames(auc_mtx), colnames(data))
annotation_df <- data.frame(Cell_types = data@meta.data[["final_annot"]])
rownames(annotation_df) <- colnames(auc_mtx)

my_colors <- list(
  Cell_types = c(B = "darkgreen","B intermediate" = "darkgreen","B memory" = "darkgreen","B naive" = "darkgreen", "CD4 T" = "lightblue", "CD8 T" = "lightblue", "T" = "lightblue", "Macrophage"= "red","Monocyte"="orange", "Neutrophil"="brown", "NK"="darkblue", "Erythroblast"="grey" )
)

pheatmap(
  auc_mtx,
  cluster_cols = TRUE,
  cluster_rows = TRUE,
  show_colnames = FALSE,
  color = colorRampPalette(c("blue", "white", "red"))(100),
  annotation_col = annotation_df, 
  annotation_colors = my_colors
)

```

Binaryzation

```{r}

```

Add the AUC score in the Seurat object

```{r}
data[['AUC']] <- CreateAssayObject(data = auc_mtx)
DefaultAssay(data) <- 'AUC'
```

Differential regulons analysis

```{r}
celltypes <- unique(data$final_annot)

deg.ls <- lapply(celltypes, function(ct) {
  deg <- FindMarkers(
    data,
    ident.1 = ct,
    ident.2 = NULL,           # contre toutes les autres cellules
    logfc.threshold = 0.05,
    min.pct = 0.1
  )
  deg$avg_logFC <- as.numeric(deg$avg_logFC)
  deg.up <- deg[which(deg$avg_logFC > 0), ]
  deg.dn <- deg[which(deg$avg_logFC < 0), ]
  deg <- list(deg.up, deg.dn)
  return(deg)
})

names(deg.ls) <- celltypes
top_regulons <- unique(unlist(lapply(deg.ls, function(x) rownames(head(x, 10)))))
length(top_regulons)
```

```{r}
data <- ScaleData(data, assay = 'AUC', features = rownames(auc_mtx))
DoHeatmap(data, group.by = "final_annot" )
```

```{r}

```
